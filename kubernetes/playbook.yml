# ANSIBLE PLAYBOOK
#   $ ansible-playbook playbook.yml
- hosts: localhost
  vars:
    ansible_python_interpreter: python3
    ansible_connection_type: local
    NAMESPACE: opendebates-{{ ENVIRONMENT }}
    DATABASE_NAME: opendebates_{{ ENVIRONMENT }}
    DATABASE_USER: opendebates_{{ ENVIRONMENT }}
    IS_LOADBALANCER: false
    DOMAIN: opendebates-testing.caktus-built.com
  tasks:
    - name: read vars from files
      # NOTE: vars in later files CAN change values of variables from earlier files
      include_vars:
        file: "{{ item }}"
      with_items:
      - "global_vars.yml"
      - "{{ ENVIRONMENT }}_secrets.yml"
      - "{{ ENVIRONMENT }}_vars.yml"

    - name: Override ansible_python_interpreter for virtualenv
      set_fact:
        ansible_python_interpreter: "{{ lookup('env', 'VIRTUAL_ENV') }}/bin/python"
      when: lookup('env','VIRTUAL_ENV')

    # https://kubernetes.github.io/ingress-nginx/
    - name: stuff needed to use nginx ingress controller
      command: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml
    - name: now tell ingress-nginx to make a load balancer when needed
      command: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/cloud-generic.yaml

    - name: create namespace, secret, config map
      k8s:
        definition: "{{ lookup('template', item) }}"
        # Ensure we see any failures in CI
        wait: yes
        validate:
          fail_on_error: yes
          strict: yes
      with_items:
        - namespace.yml
        - secret.yaml.j2
        - configmap.yaml.j2
      vars:
        APP_NAME: opendebates
        SECRET_NAME: opendebates-secrets
        SECRET_VARS:
          DATABASE_URL: "{{ DATABASE_URL }}"
          EMAIL_HOST_PASSWORD: "{{ EMAIL_HOST_PASSWORD }}"
        CONFIGMAP_NAME: 'django-config'
        CONFIGMAP_VARS:
          DEFAULT_FROM_EMAIL: "{{ DEFAULT_FROM_EMAIL }}"
          DJANGO_SETTINGS_MODULE: opendebates.kube_settings
          DEPLOYMENT_TAG: "{{ ENVIRONMENT }}"
          DOMAIN_NAME: "{{ DOMAIN_NAME }}"
          EMAIL_HOST: "{{ EMAIL_HOST }}"
          EMAIL_HOST_USER: "{{ EMAIL_HOST_USER }}"
          ENVIRONMENT: "{{ ENVIRONMENT }}"
          REDIS_HOST: redis
          MEMCACHED_HOST: memcached
          # FIXME: Add recaptcha, mixpanel, optimizely

    - name: Deploy redis
      k8s:
        definition: "{{ lookup('template', item) }}"
        # Ensure we see any failures in CI
        wait: yes
        wait_timeout: 300
        validate:
          fail_on_error: yes
          strict: yes
      with_items:
        - app.yaml.j2
      vars:
        APP_NAME: redis
        CONTAINER_IMAGE_REPO: redis
        CONTAINER_IMAGE_TAG: "{{ REDIS_VERSION }}"
        CONTAINER_PORT: 6379
        CONTAINER_REPLICAS: 1
        SERVICE_PORT: 6379
        VOLUME_MOUNT: /data
        VOLUME_NAME: redisvolume
        VOLUME_SIZE: 20Gi

    - name: Deploy memcached
      k8s:
        definition: "{{ lookup('template', item) }}"
        # Ensure we see any failures in CI
        wait: yes
        validate:
          fail_on_error: yes
          strict: yes
      with_items:
        - app.yaml.j2
      vars:
        APP_NAME: memcached
        CONTAINER_IMAGE_REPO: memcached
        CONTAINER_IMAGE_TAG: "{{ MEMCACHED_VERSION }}"
        CONTAINER_PORT: 11211
        CONTAINER_REPLICAS: 1
        SERVICE_PORT: 11211

    - name: Deploy opendebates
      k8s:
        definition: "{{ lookup('template', item) }}"
        # Ensure we see any failures in CI
        wait: yes
        wait_timeout: 300
        validate:
          fail_on_error: yes
          strict: yes
      with_items:
        - app.yaml.j2
      vars:
        # These vars are used by Kubernetes. Put vars to be set in the env
        # for Django into the django-config configmap.
        APP_NAME: opendebates
        CONTAINER_IMAGE_REPO: "{{ OPENDEBATES_IMAGE }}"
        CONTAINER_IMAGE_TAG: "20191002081650"
        CONFIG_MAP_NAMES:
          - "django-config"
        SECRET_NAMES:
          - opendebates-secrets
        CONTAINER_PORT: 8000
        CONTAINER_REPLICAS: 2
        SERVICE_PORT: 80
        DOMAIN_NAME: "{{ DOMAIN_NAME }}"
        CONTAINER_URL_PATH: /

    - name: run migrations
      shell: kubectl exec --namespace={{ NAMESPACE }} deployment/opendebates /venv/bin/python /code/manage.py migrate

    - name: create site
      shell: kubectl exec --namespace={{ NAMESPACE }} deployment/opendebates /venv/bin/python /code/manage.py create_site {{ DOMAIN }}
